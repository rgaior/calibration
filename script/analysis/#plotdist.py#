#######################################################################
### return the power at the installation for a given detector name  ###
#######################################################################
import matplotlib.pyplot as plt
import matplotlib.pylab as plab
import numpy as np
import os
import sys
cwd = os.getcwd()
classpath = cwd + '/../classes/'
utilspath = cwd + '/../utils/'
sys.path.append(utilspath)
sys.path.append(classpath)
import utils
import detector
import calibration
basefolder = cwd + '/../../data/'

cal = calibration.Calibration(datafolder = basefolder)
#first fill the calibration of the adjustable resistor
cal.fillpotardata()

cal.reset()
#fill the installation information
cal.filldetectors('horn')
cal.filldetectors('helix')

## data holder:
patinstallhorn = np.array([])
patinstallhelix = np.array([])
zenithhelix = np.array([])
zenithhorn = np.array([])
azhelix = np.array([])
azhorn = np.array([])

for det in cal.horndet:
    patinstallhorn = np.append(patinstallhorn, cal.getpoweratinstall(det))
    zenithhorn = np.append(zenithhorn, det.zenith)
    azhorn = np.append(azhorn, det.azimuth)
for det in cal.helixdet:
    patinstallhelix = np.append(patinstallhelix, cal.getpoweratinstall(det))
    zenithhelix = np.append(zenithhelix, det.zenith)
    azhelix = np.append(azhelix, det.azimuth)

fig1 = plt.figure(figsize = (8,8))
n, bins, patches = plt.hist(patinstallhorn, 10, facecolor='green', alpha=0.75, label='horn')
n1, bins1, patches1 = plt.hist(patinstallhelix, 10, facecolor='red', alpha=0.75, label='helix')
plt.xlabel('power at installation [dBm]')
plt.ylabel('entries')
plt.legend()
#fig2 = plt.figure(figsize = (8,8))
#ax = 
#plt.plot(azhelix,patinstallhelix)
#plt.plot(azhorn,patinstallhorn)

plt.show()

## write down the values (for the notebook)
print ' helix detectors (in dBm):'
for det in cal.helixdet:
    print det.name , ' ' , "%.2f" % cal.getpoweratinstall(det)

print '\n horn detectors (in dBm):'
for det in cal.horndet:
    print det.name , ' ' , "%.2f" % cal.getpoweratinstall(det)

